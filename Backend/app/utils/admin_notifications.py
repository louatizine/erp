from flask import current_app
from flask_mail import Message, Mail
from datetime import datetime

def send_admin_leave_notification(leave_request, employee_info):
    """Envoyer une notification par email √† l'administrateur concernant une nouvelle demande de cong√©"""
    mail = current_app.extensions.get('mail')
    if not mail:
        current_app.logger.error("Extension mail non initialis√©e")
        return False

    admin_email = current_app.config.get('ADMIN_EMAIL')  # R√©cup√©rer l'email admin depuis la config
    if not admin_email:
        current_app.logger.error("Email administrateur non configur√©")
        return False

    # Formater les dates
    start_date = (
        leave_request['start_date'].strftime('%d/%m/%Y')
        if isinstance(leave_request['start_date'], datetime)
        else leave_request['start_date']
    )
    end_date = (
        leave_request['end_date'].strftime('%d/%m/%Y')
        if isinstance(leave_request['end_date'], datetime)
        else leave_request['end_date']
    )

    # Cr√©er le sujet et le corps de l'email
    subject = f"Nouvelle Demande de Cong√© de {employee_info.get('name', 'Un Employ√©')}"

    body = f"""
    Cher Administrateur,

    Une nouvelle demande de cong√© a √©t√© soumise et n√©cessite votre attention.

    üë§ D√©tails de l'Employ√©:
    - Nom: {employee_info.get('name', 'Non disponible')}
    - Email: {employee_info.get('email', 'Non disponible')}
    # - D√©partement: {employee_info.get('department', 'Non disponible')}

    üìÖ D√©tails de la Demande de Cong√©:
    - Type de Cong√©: {leave_request['leave_type'].capitalize()}
    - Date de D√©but: {start_date}
    - Date de Fin: {end_date}
    - Nombre Total de Jours: {leave_request.get('leave_days', 'Non disponible')}
    - Motif: {leave_request.get('reason', 'Aucun motif fourni')}

    Veuillez examiner cette demande d√®s que possible.

    Cordialement,
    Dynamix services
    """

    try:
        msg = Message(
            subject=subject,
            recipients=[admin_email],
            body=body,
            sender=current_app.config.get('MAIL_DEFAULT_SENDER')
        )
        mail.send(msg)
        return True
    except Exception as e:
        current_app.logger.error(f"√âchec de l'envoi de la notification admin: {str(e)}")
        return False